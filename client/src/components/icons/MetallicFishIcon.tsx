import { useState, useEffect } from 'react';
import MetallicPaint, { parseLogoImage } from "../../blocks/Animations/MetallicPaint/MetallicPaint";
import FishIcon from './FishIcon';

// Create a static SVG file containing the fish path
const fishSvgContent = `
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" width="1024" height="1024">
  <g transform="translate(0.000000,1024.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">
    <path d="M5770 7125 c-65 -21 -102 -62 -107 -122 -4 -43 0 -58 42 -133 168
    -309 280 -615 349 -956 29 -143 56 -362 56 -457 0 -114 16 -107 -250 -107
    -271 0 -251 -11 -269 145 -43 367 -192 772 -400 1081 -176 263 -310 377 -441
    377 -66 0 -114 -22 -140 -66 -37 -60 -26 -93 95 -287 43 -69 102 -171 131
    -227 138 -269 253 -652 271 -903 9 -127 25 -120 -281 -120 -195 0 -256 3 -264
    13 -6 7 -20 64 -31 127 -85 480 -367 995 -606 1106 -123 58 -255 7 -255 -98 0
    -50 13 -81 100 -232 156 -274 270 -589 295 -822 11 -97 18 -95 -268 -92 l-241
    3 -12 25 c-7 14 -26 77 -42 140 -53 204 -155 413 -255 526 -108 120 -231 146
    -302 63 -35 -43 -33 -97 6 -174 88 -173 157 -371 175 -503 10 -81 2 -84 -192
    -80 -145 3 -164 5 -184 23 -12 11 -66 85 -120 165 -140 206 -282 374 -524 616
    -224 223 -395 367 -591 497 -220 146 -350 194 -405 149 -44 -35 -35 -76 97
    -452 243 -693 343 -1048 343 -1223 0 -131 -86 -443 -327 -1187 -124 -383 -138
    -449 -105 -490 32 -39 85 -31 216 34 207 101 489 320 757 586 233 232 414 452
    520 635 l33 57 95 -7 c52 -4 123 -11 158 -17 l63 -10 72 -124 c257 -442 672
    -851 1152 -1135 334 -198 634 -303 868 -303 101 0 124 3 177 25 67 27 115 80
    130 143 14 54 6 143 -30 335 -42 232 -107 492 -154 624 l-24 67 31 62 c17 34
    31 74 31 88 0 15 -9 55 -20 89 -11 34 -20 70 -20 79 0 33 30 121 60 171 l30
    51 -30 53 c-57 101 -80 183 -80 286 0 99 19 158 90 271 l45 73 -47 96 c-54
    110 -72 187 -73 292 0 125 35 210 126 305 l58 59 -27 112 c-51 216 -44 326 29
    424 31 41 36 45 73 42 22 -2 55 -16 74 -31 33 -27 35 -33 105 -318 40 -162 83
    -345 97 -407 13 -62 26 -121 29 -132 l4 -19 284 4 c310 4 315 6 339 76 71 206
    222 576 262 641 31 50 103 109 155 126 70 23 75 19 90 -67 16 -91 43 -179 74
    -243 38 -76 151 -191 272 -274 326 -225 773 -325 1128 -253 133 27 176 59 176
    132 0 69 -32 101 -200 201 -303 180 -637 275 -998 283 -126 4 -167 1 -243 -14
    -51 -10 -98 -16 -106 -14 -10 4 -13 32 -13 117 0 159 -23 290 -71 416 -42 108
    -126 246 -192 313 -62 64 -174 147 -249 185 -138 71 -316 119 -454 124 -139 4
    -179 -12 -179 -71 0 -61 40 -91 185 -138 274 -90 485 -268 588 -498 48 -107
    65 -190 81 -391 3 -41 10 -77 15 -79 4 -3 40 5 80 16 126 37 336 37 471 0 98
    -27 201 -72 285 -124 l72 -45 -36 -6 c-155 -26 -289 -98 -398 -214 -92 -98
    -151 -211 -212 -407 -48 -155 -114 -474 -106 -512 3 -15 9 -45 12 -67 10 -59
    93 -239 165 -355 88 -143 197 -262 331 -365 76 -58 85 -69 85 -97 0 -44 -50
    -135 -165 -299 -144 -206 -372 -465 -607 -693 -173 -168 -480 -396 -628 -466
    -98 -46 -140 -40 -140 20 0 30 205 647 293 883 69 185 157 478 157 524 0 84
    -91 413 -220 795 -146 430 -154 460 -146 534 5 48 40 93 79 101 39 8 118 -28
    302 -138 219 -132 395 -276 623 -510 204 -208 317 -339 435 -507 33 -47 61
    -87 62 -88 1 -1 73 -4 159 -6 l157 -3 -5 62 c-13 168 -89 400 -183 559 -24 42
    -34 71 -32 89 6 44 58 88 119 100 82 17 142 -22 219 -144 75 -118 149 -249
    186 -329 33 -72 34 -74 66 -70 18 2 108 4 200 5 l168 1 6 34 c9 56 -33 230
    -91 380 -67 173 -167 350 -206 365 -31 12 -95 8 -134 -9 -15 -7 -67 -55 -115
    -108 -114 -126 -175 -186 -265 -262 -117 -99 -95 -99 -295 10 -201 109 -399
    276 -542 457 -73 91 -183 264 -183 286 0 9 48 14 219 19 296 9 278 -3 320 218
    34 176 100 377 182 554 110 240 132 279 167 295 46 23 102 13 129 -23 56 -72
    126 -329 153 -560 11 -99 18 -123 33 -130 10 -4 131 -8 270 -8 245 -1 255 0
    317 23 38 14 82 36 97 50 58 49 68 139 19 178 -13 11 -37 24 -53 30 -24 9 -37
    8 -72 -6 -24 -10 -63 -18 -86 -18 -43 0 -71 21 -74 56 -1 10 -5 42 -9 71 -18
    141 -88 408 -147 561 -66 172 -174 394 -215 445 -64 78 -152 82 -217 9 -35
    -40 -37 -85 -8 -160 38 -97 118 -340 155 -472 33 -117 32 -118 -77 -122 l-85
    -3 -55 165 c-84 250 -165 416 -275 563 -31 42 -35 54 -35 106 0 52 5 67 39
    122 79 128 106 236 106 424 0 157 -16 230 -72 316 -40 62 -44 93 -14 110 64
    36 205 -44 337 -191 171 -191 334 -521 405 -826 16 -67 31 -124 33 -125 2 -2
    115 0 250 5 211 7 250 10 269 25 35 27 33 90 -5 137 -43 55 -165 163 -253 226
    -190 134 -402 246 -636 335 -240 91 -555 175 -675 178 -33 1 -84 -4 -115 -11
    -245 -60 -451 -376 -586 -899 -38 -145 -85 -393 -96 -507 -4 -33 -11 -63 -17
    -66 -21 -14 -47 -9 -83 15 -20 13 -51 26 -68 29 -25 5 -33 2 -43 -15 -7 -12
    -11 -45 -9 -77 5 -69 -9 -91 -81 -124 -94 -42 -147 -79 -170 -118 -19 -33 -19
    -36 -3 -61 31 -47 125 -64 240 -43 44 8 82 13 84 11 2 -2 -5 -58 -17 -124 -12
    -67 -19 -123 -16 -126 2 -3 106 -6 231 -7 l226 -3 6 -47 c23 -157 91 -365 177
    -531 50 -99 65 -160 46 -193 -11 -22 -63 -37 -115 -34 l-52 3 -13 73 c-19 104
    -75 272 -122 364 -91 180 -182 261 -266 239 -72 -20 -95 -119 -53 -235 12 -35
    30 -101 39 -147 9 -46 19 -89 21 -95 4 -10 -30 -13 -143 -13 -116 0 -151 3
    -160 14 -6 8 -18 25 -26 38 -7 13 -45 63 -83 110 -173 216 -489 411 -739 456
    -62 11 -176 15 -176 6 0 -19 76 -116 149 -189 92 -92 221 -175 375 -240 150
    -64 253 -85 402 -85 121 0 174 14 174 44 0 19 -33 66 -49 70 -7 2 -32 -2 -57
    -8 -64 -15 -211 -15 -282 0 -240 51 -480 211 -622 416 -16 22 -38 67 -50 100
    -27 72 -49 200 -63 358 -10 103 -9 111 9 130 15 17 31 20 102 20 102 0 153
    -15 223 -66 84 -60 121 -124 159 -274 38 -152 70 -152 316 -4 103 62 185 120
    267 190 l63 55 150 -106 c166 -116 270 -204 354 -299 84 -94 199 -257 244
    -346 l37 -72 112 -6 c61 -3 111 -3 110 1 -2 3 -30 39 -63 78 -150 177 -380
    360 -625 494 -173 95 -157 87 -275 138 -146 63 -283 110 -420 144 -178 44
    -257 53 -404 47 -158 -7 -202 -15 -275 -51 -44 -21 -54 -23 -142 -17 -51 4
    -133 14 -181 22 -47 9 -87 14 -88 12 -1 -1 -15 -26 -31 -54 -30 -53 -103 -153
    -186 -253 -71 -87 -283 -301 -396 -400 -108 -95 -291 -238 -297 -232 -2 2 31
    104 73 227 197 572 253 770 253 883 0 133 -74 436 -212 865 -100 310 -139 445
    -139 480 0 15 7 42 15 59 35 74 153 76 324 7 249 -101 506 -259 740 -455 119
    -100 394 -376 513 -516 101 -119 186 -232 215 -284 l21 -38 134 -7 c137 -7
    151 -2 115 36 -12 12 -56 59 -97 104 -41 45 -102 106 -135 135 -33 29 -118
    107 -189 173 -251 233 -510 408 -820 552 -153 71 -248 98 -341 99 -89 0 -158
    -38 -194 -107 -15 -30 -41 -65 -57 -78 -63 -53 41 -349 302 -860 32 -62 61
    -127 65 -144 4 -17 2 -41 -3 -54 -13 -32 -93 -108 -123 -117 -33 -11 -74 -1
    -186 46 -185 77 -380 196 -553 337 -90 73 -276 261 -276 279 0 5 110 9 251 9
    193 0 258 3 280 14 66 32 63 122 -10 285 -166 368 -387 656 -570 742 -81 38
    -156 33 -221 -16z">
    </path>
  </g>
</svg>
`;

interface MetallicFishIconProps {
  className?: string;
}

export const MetallicFishIcon: React.FC<MetallicFishIconProps> = ({ className = "" }) => {
  const [imageData, setImageData] = useState<ImageData | null>(null);

  useEffect(() => {
    async function loadFishIcon() {
      try {
        // Create a Blob with the SVG content
        const blob = new Blob([fishSvgContent], { type: 'image/svg+xml' });
        
        // Create a File object from the blob
        const file = new File([blob], 'fish.svg', { type: 'image/svg+xml' });
        
        // Parse the image using the MetallicPaint's parseLogoImage utility
        const parsedData = await parseLogoImage(file);
        
        // Update state with the processed image data
        setImageData(parsedData?.imageData ?? null);
      } catch (err) {
        console.error("Error loading fish icon for metallic effect:", err);
      }
    }

    loadFishIcon();
  }, []);

  return (
    <div className={`${className} overflow-hidden`}>
      {imageData ? (
        <MetallicPaint 
          imageData={imageData} 
          params={{ 
            edge: 2, 
            patternBlur: 0.005, 
            patternScale: 2, 
            refraction: 0.015, 
            speed: 0.3, 
            liquid: 0.07 
          }} 
        />
      ) : (
        <FishIcon className={className} />
      )}
    </div>
  );
}

export default MetallicFishIcon;